{
  "extends": [
    "airbnb-base",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "env": {
    "jest/globals": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json"]
  },
  "plugins": ["jest", "@typescript-eslint", "import"],
  "rules": {
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "ts": "never"
      }
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": true,
        "optionalDependencies": false,
        "peerDependencies": false
      }
    ],
    "no-use-before-define": [
      "error",
      {
        "functions": false,
        "classes": true
      }
    ],
    "max-len": [
      "warn",
      {
        "code": 120
      }
    ],
    "max-params": [
      "warn",
      {
        "max": 3
      }
    ],
    "import/order": [
      "error",
      { "groups": ["builtin", "external", "parent", "sibling", "index"] }
    ],
    "import/no-useless-path-segments": "warn",
    "prefer-destructuring": "off",
    "prefer-object-spread": "warn",
    "object-curly-newline": ["error", { "consistent": true }],
    "no-underscore-dangle": "off",
    "arrow-body-style": "off",
    "consistent-return": "off",
    "arrow-parens": ["error", "always"],
    "no-console": "error",
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      },
      { "blankLine": "always", "prev": "*", "next": "return" },
      {
        "blankLine": "always",
        "prev": ["const", "let", "var", "block-like"],
        "next": "if"
      }
    ],
    "jest/no-disabled-tests": "error",
    "no-extra-boolean-cast": "off",
    "no-prototype-builtins": "off",
    "default-param-last": "off",
    "indent": "off",
    "lines-between-class-members": [
      "error",
      "always",
      { "exceptAfterSingleLine": true }
    ],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/no-use-before-define": [
      "error",
      {
        "functions": false,
        "classes": true
      }
    ],
    "@typescript-eslint/padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": ["const", "let", "var"],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      },
      { "blankLine": "always", "prev": "*", "next": "return" },
      {
        "blankLine": "always",
        "prev": ["const", "let", "var", "block-like"],
        "next": "if"
      },
      { "blankLine": "always", "prev": "*", "next": ["interface", "type"] }
    ],
    "@typescript-eslint/consistent-indexed-object-style": ["error", "record"],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "enum",
        "format": ["PascalCase"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      }
    ],
    "@typescript-eslint/no-confusing-non-null-assertion": "warn",
    "@typescript-eslint/no-empty-interface": "warn",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/unified-signatures": "warn",
    "@typescript-eslint/prefer-nullish-coalescing": "warn",
    "@typescript-eslint/prefer-optional-chain": "warn",
    "@typescript-eslint/type-annotation-spacing": ["error"],
    "import/prefer-default-export": "off",
    "import/no-default-export": "error",
    "@typescript-eslint/ban-ts-comment": "off",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error"
  },
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  }
}
